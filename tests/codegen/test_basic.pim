var a-global = 1

# CHECK: (defun foo--Int (a)
def foo(a:Int) -> Int:
    return a + 1

# CHECK: (foo--Int 2)
foo(2)

# CHECK: (defun a-select--Int_Int (a b)
def a-select(a: Int, b: Int) -> Int:
    # CHECK:     (cl-return (if (< a b) a b))))
    return a if a < b else b

# templated function
def a-select-template[T](a: T, b: T) -> T:
    return a if a < b else b

# CHECK: (setq aa (a-select-template--T_T 1 2))
var aa = a-select-template(1, 2)

# CHECK: (defun a-select-template-called-- ()
def a-select-template-called() -> Int:
    # CHECK:     (cl-return (a-select-template--T_T 1 2))))
    return a-select-template(1, 2)
